{"version":3,"file":"static/js/493.6355cbf2.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/Contacts/selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/views/ContactsView.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  Field as FormikField,\n  Form as FormikForm,\n  ErrorMessage as ErrorMsg,\n} from 'formik';\n\nconst ErrorMessage = styled(ErrorMsg)`\n  color: red;\n  font-size: 12px;\n`;\n\nconst Field = styled(FormikField)`\n  border: 2px solid grey;\n  border-radius: 4px;\n  font-size: 14px;\n  min-width: 125px;\n  padding: 8px;\n  &:hover {\n    border: 1px solid blue;\n  }\n`;\n\nconst Form = styled(FormikForm)`\n  max-width: 500px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst FormGroup = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  margin-right: 12px;\n  margin-bottom: 16px;\n`;\n\nconst Button = styled.button`\n  background-color: rgb(76, 234, 81);\n  font-size: 14px;\n  padding: 10px 16px;\n  &:active,\n  &:focus,\n  &:hover {\n    background-color: rgb(54, 167, 57);\n  }\n`;\n\nconst Container = styled.div`\n  max-width: 100%;\n  margin-bottom: 40px;\n`;\n\nexport { ErrorMessage, Field, Form, FormGroup, Button, Container };\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\n\nimport { addContact } from 'redux/Contacts/operations';\nimport {\n  ErrorMessage,\n  Field,\n  Form,\n  FormGroup,\n  Button,\n  Container,\n} from './ContactForm.styled';\nimport { selectContacts } from 'redux/Contacts/selectors';\n\nconst contactsSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(3, 'Too Short!')\n    .max(20, 'Too Long!')\n    .required('Required!'),\n  number: Yup.string()\n    .min(8, 'Too Short!')\n    .max(13, 'Too Long!')\n    .required('Required!'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = async values => {\n    const name = values.name;\n    const number = values.number;\n    const isOnContacts = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (isOnContacts) {\n      Notiflix.Notify.failure(`${name} already in phonebook!`);\n      return;\n    }\n\n    try {\n      await dispatch(addContact({ name, number })).unwrap();\n      Notiflix.Notify.success(`${name} added to phonebook!`);\n    } catch (error) {\n      Notiflix.Notify.failure(`Sorry, something went wrong.`);\n    }\n  };\n\n  return (\n    <Container>\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        validationSchema={contactsSchema}\n        onSubmit={(values, actions) => {\n          actions.resetForm();\n          handleSubmit(values);\n        }}\n      >\n        <Form>\n          <FormGroup htmlFor=\"name\">\n            Name\n            <Field name=\"name\" placeholder=\"Anna\" value={contacts.name} />\n            <ErrorMessage name=\"name\" component=\"span\" />\n          </FormGroup>\n\n          <FormGroup htmlFor=\"number\">\n            Number\n            <Field name=\"number\" placeholder=\"+45...\" value={contacts.number} />\n            <ErrorMessage name=\"number\" component=\"span\" />\n          </FormGroup>\n\n          <Button type=\"submit\">Add contact</Button>\n        </Form>\n      </Formik>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\nconst List = styled.ul`\n  display: flex;\n  gap: 16px;\n`;\n\nconst Item = styled.li`\n  border: 1px solid grey;\n  border-radius: 8px;\n  background-color: rgba(255, 227, 227, 0.4);\n`;\n\nconst Wrapper = styled.div`\n  max-width: 360px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 16px;\n  padding: 12px;\n`;\n\nconst AccentText = styled.span`\n  font-size: 16px;\n  font-weight: 500;\n  margin-bottom: 8px;\n`;\n\nconst Text = styled.p`\n  font-style: oblique;\n`;\n\nconst Button = styled.button`\n  background-color: rgb(231, 53, 53);\n  font-size: 14px;\n  padding: 10px 16px;\n  &:active,\n  &:focus,\n  &:hover {\n    background-color: rgb(184, 42, 42);\n  }\n`;\n\nexport { List, Item, Wrapper, AccentText, Text, Button };\n","import { useDispatch, useSelector } from 'react-redux';\nimport ProfileImg from './profile.jpg';\n\nimport { deleteContact } from 'redux/Contacts/operations';\nimport { selectVisibleContacts } from 'redux/Contacts/selectors';\nimport {\n  List,\n  Item,\n  Wrapper,\n  AccentText,\n  Text,\n  Button,\n} from './ContactList.styled';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectVisibleContacts);\n\n  if (!contacts.length) return null;\n\n  return (\n    <List>\n      {contacts.map(contact => (\n        <Item key={contact.id}>\n          <Wrapper>\n            <img src={ProfileImg} alt=\"profile-img\" width=\"60\" />\n            <Text>\n              <AccentText>Name: </AccentText>\n              {contact.name}\n            </Text>\n            <Text>\n              <AccentText>Number: </AccentText>\n              {contact.number}\n            </Text>\n            <Button onClick={() => dispatch(deleteContact(contact.id))}>\n              Delete contact\n            </Button>\n          </Wrapper>\n        </Item>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  gap: 16px;\n  align-items: center;\n  margin-bottom: 30px;\n`;\n\nconst Text = styled.label`\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nconst Field = styled.input`\n  border: 2px solid grey;\n  border-radius: 4px;\n  font-size: 14px;\n  min-width: 125px;\n  padding: 8px;\n  &:hover {\n    border: 1px solid blue;\n  }\n`;\n\nexport { Wrapper, Text, Field };\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { updateFilter } from 'redux/Contacts/filterSlice';\nimport { Wrapper, Text, Field } from './Filter.styled';\nimport { selectFilter } from 'redux/Contacts/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  return (\n    <Wrapper>\n      <Text>Find contacts by name</Text>\n      <Field\n        type=\"text\"\n        value={filter}\n        onChange={evt => dispatch(updateFilter(evt.target.value))}\n      />\n    </Wrapper>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/Contacts/operations';\nimport {\n  selectError,\n  selectIsLoading,\n  selectVisibleContacts,\n} from 'redux/Contacts/selectors';\n\nexport default function ContactsView() {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      {isLoading && !error && <Loader />}\n      {error && (\n        <p className=\"info-text\">\n          Sorry, something went wrong. Please try to reload this page.\n        </p>\n      )}\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {visibleContacts.length > 0 && !error ? (\n        <ContactList />\n      ) : (\n        <p className=\"info-text\">Your phonebook is empty.</p>\n      )}\n    </div>\n  );\n}\n"],"names":["ErrorMessage","styled","ErrorMsg","_templateObject","_taggedTemplateLiteral","Field","FormikField","_templateObject2","Form","FormikForm","_templateObject3","FormGroup","_templateObject4","Button","_templateObject5","Container","_templateObject6","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","contactsSchema","Yup","shape","min","max","required","number","ContactForm","dispatch","useDispatch","useSelector","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","values","_context","prev","next","some","Notiflix","concat","abrupt","addContact","unwrap","t0","stop","_x","apply","arguments","_jsx","children","Formik","initialValues","validationSchema","onSubmit","actions","resetForm","_jsxs","htmlFor","placeholder","value","component","type","List","Item","Wrapper","AccentText","Text","ContactList","length","map","src","ProfileImg","alt","width","onClick","deleteContact","id","Filter","onChange","evt","updateFilter","target","ContactsView","visibleContacts","useEffect","fetchContacts","Loader","className"],"sourceRoot":""}