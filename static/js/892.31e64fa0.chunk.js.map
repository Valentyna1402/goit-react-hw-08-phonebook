{"version":3,"file":"static/js/892.31e64fa0.chunk.js","mappings":"+PAEMA,EAAUC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6FAOpBC,EAAQH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,yDAKjBG,EAAOL,EAAAA,GAAAA,KAAWM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,2BAIlBK,EAAQP,EAAAA,GAAAA,MAAYQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,+EAMpBO,EAAQT,EAAAA,GAAAA,MAAYU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,yLAYpBS,EAASX,EAAAA,GAAAA,OAAaY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,6M,SCxBb,SAASW,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjBC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA0BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAgCT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAEtBG,EAAe,SAAHC,GAAqC,IAADC,EAAAD,EAA9BE,OAAUb,EAAIY,EAAJZ,KAAMc,EAAKF,EAALE,MACtC,OAAQd,GACN,IAAK,OACH,OAAOC,EAAQa,GACjB,IAAK,QACH,OAAOT,EAASS,GAClB,IAAK,WACH,OAAOL,EAAYK,GACrB,QACE,OAEN,EAUA,OACEC,EAAAA,EAAAA,MAACpC,EAAO,CAAAqC,SAAA,EACNC,EAAAA,EAAAA,KAAClC,EAAK,CAAAiC,SAAC,gDAEPD,EAAAA,EAAAA,MAAC9B,EAAI,CAACiC,SAZW,SAAAC,GACnBA,EAAEC,iBACF1B,EAAS2B,EAAAA,EAAAA,SAAoB,CAAErB,KAAAA,EAAMI,MAAAA,EAAOI,SAAAA,KAC5CP,EAAQ,IACRI,EAAS,IACTI,EAAY,GACd,EAMkCa,aAAa,MAAKN,SAAA,EAC9CD,EAAAA,EAAAA,MAAC5B,EAAK,CAAA6B,SAAA,CAAC,SAELC,EAAAA,EAAAA,KAAC5B,EAAK,CAACkC,KAAK,OAAOvB,KAAK,OAAOc,MAAOd,EAAMwB,SAAUd,QAGxDK,EAAAA,EAAAA,MAAC5B,EAAK,CAAA6B,SAAA,CAAC,WAELC,EAAAA,EAAAA,KAAC5B,EAAK,CACJkC,KAAK,QACLvB,KAAK,QACLc,MAAOV,EACPoB,SAAUd,QAIdK,EAAAA,EAAAA,MAAC5B,EAAK,CAAA6B,SAAA,CAAC,aAELC,EAAAA,EAAAA,KAAC5B,EAAK,CACJkC,KAAK,WACLvB,KAAK,WACLc,MAAON,EACPgB,SAAUd,QAIdO,EAAAA,EAAAA,KAAC1B,EAAM,CAACgC,KAAK,SAAQP,SAAC,kBAI9B,C","sources":["components/views/RegisterView/RegisterView.styled.js","components/views/RegisterView/RegisterView.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  align-items: center;\n`;\n\nconst Title = styled.h3`\n  text-align: center;\n  margin-bottom: 25px;\n`;\n\nconst Form = styled.form`\n  width: 320px;\n`;\n\nconst Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 25px;\n`;\n\nconst Input = styled.input`\n  border: 2px solid grey;\n  border-radius: 4px;\n  font-size: 14px;\n  min-width: 125px;\n  padding: 8px;\n  margin-top: 5px;\n  &:hover {\n    border: 1px solid blue;\n  }\n`;\n\nconst Button = styled.button`\n  display: block;\n  background-color: #f1870e;\n  font-size: 14px;\n  margin: 0 auto;\n  padding: 10px 16px;\n  &:active,\n  &:focus,\n  &:hover {\n    background-color: rgb(54, 167, 57);\n  }\n`;\n\nexport { Form, Label, Button, Wrapper, Title, Input };\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport operations from 'redux/Auth/authOperations';\nimport {\n  Button,\n  Form,\n  Input,\n  Label,\n  Title,\n  Wrapper,\n} from './RegisterView.styled';\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(operations.register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <Wrapper>\n      <Title>Please fill out this form for registration</Title>\n\n      <Form onSubmit={handleSubmit} autoComplete=\"off\">\n        <Label>\n          Name:\n          <Input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n        </Label>\n\n        <Label>\n          E-mail:\n          <Input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </Label>\n\n        <Label>\n          Password:\n          <Input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </Label>\n\n        <Button type=\"submit\">Register</Button>\n      </Form>\n    </Wrapper>\n  );\n}\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","Form","_templateObject3","Label","_templateObject4","Input","_templateObject5","Button","_templateObject6","RegisterView","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","handleChange","_ref","_ref$target","target","value","_jsxs","children","_jsx","onSubmit","e","preventDefault","operations","autoComplete","type","onChange"],"sourceRoot":""}